%title joycss独特之处
%template article

joycss是一个基于node和php的css自动拼图工具，本文主要说明joycss的不同于其他拼图
工具的一些特点，使用文档，请移步[[joycss]]。

世界上已经很多sprite拼图工具了，比如我以前经常使用的smartsprite，或者cssgaga，或
者在线拼图工具等等。他们各自有其强大之处，使用起来，也总是会有很多不如意的地方，
smartsprite 必须看着文档写注释，cssgaga使用拖拽，还不支持mac，linux，不支持自动
化发布集成。

joycss主要有以下几个特殊之处：
# 支持对手工sprite拼图过的样式修改操作。包括在已经拼好的图片后面追加图片和背景图
  覆盖两种操作。demo: [[local:../demo/joycss/test-append.html|sprite修改]]
# 同时兼容垂直拼图和紧凑拼图两种方案，支持repeat-x，repeat-y图片处理。 使用自动
  判断是否可以使用紧凑方式拼图，如果css定义了高度和宽度，那么使用紧凑拼图，其他
  图片单独做一行处理，使用smartsprite方式拼图。一张sprite图，既有紧凑方式，又有
  单行留白拼图。demo: [[local:../demo/joycss/test.html|基本使用]]
# 对css文件意义的深度分析，知道css的意义，可以很方便的：
  # 对背景图定位，通过分析css样式本身来获取信息，包括读取图片所在css规则中的，width,
    height, line-height, padding, background-position，通过计算来处理图片的位置
  # 使用背景图的url参数来弥补一些css无法获取的信息，或者开发者的特殊处理
  # 很好的处理css规则嵌套，和css hack，比如`@media print{ body {}}`
# 使用命令行执行，可以方便集成在自动发布过程中。
# 对于淘宝内容开发者，支持图片拼好以后，调用tps图片上传接口，上传图片，并且替换
  图片url链接。
主要就是这些了，不知道读者觉得如何，还有什么功能你觉得应该有呢。

=== 默认假设 ===

joycss为了做到尽可能使用简单，假设以下情况是最普通，最常用的情况：一个css文件需
要处理的css文件，里面所有图片(除了http请求的图片)都是需要做sprite拼图的，并且图
片的定位可以通过背景图所在的css规则中确定。

安装这样的默认情况，一个css文件是不需要做任何处理，可以通过joycss生成sprite合成
后的样式和图片。当然，你也许会说，我要自定义怎么办，一个图片我不想做拼图，这个时
候就需要使用url参数来通知joycss了，过滤一个图片在图片url后面假设一个`esc`的参数
，就像这样`background: url(a.png?esc) no-repeat`，遇到这样的情况，这个图片就不会
被合并了。其他情况，同样如此，需要通过url参数来告知joycss应该如何处理。url参数的
使用会尽可能简介，因为大多数情况下，都和默认假设相符，只在某些情况才需要开发者加
url参数。

=== 对sprite过的css修改 ===

这种情况是，比如一个已经手动拼图好的css文件，样式是做个sprite处理的了，以前是手
动拼图，那么，此时如果需要增加一个背景图，或者，需要修改某个背景图，这样就属于对
sprite 的样式修改了。最简单的方式是追加，追加只会在原有的sprite图片最后追加一个
图片，并且写入追加背景图css定位信息。第二种属于覆盖原有图片，会把新的图片放在原
来sprite图片的相同位置，css样式不做修改。

修改sprite有时候可能会产生问题，比如某个图片使用的定位方式不是基于图片左上点，而
是使用`0 -100%` 这样的情况需要使用者自己判断了。不过，还是会有一些情况有用的。

=== css意义的分析 ===

css意义的分析，主要通过`src/cssReader.js`完成的，cssReader使用一个对象的三个属性
分别贮存一组css规则的`selector, property, value`，三者都是数组贮存，这样避免了使
用一个对象`{property: value}`这种情况下，遇到css hack时可能被覆盖了，比如
`color: red; color: blue\9; color: #111\8`，属性对应3个值。

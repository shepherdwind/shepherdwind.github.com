* vim哲学
  * 大多数时候我们是在正常模式下，我们写代码中，大部分时候是编辑修改中
  
- `gf`在当前文件夹中寻找某个文件,或者在path中查找
- 命令模式下`<C-h>`删除一个字母
- 大多数时候我们是在正常模式下，我们写代码中，大部分时候是编辑修改中
- 格式化json `:%!python -m json.tool`
- vim text-object`:help text-object`
- vim或者emacs优势
  - 编码体验一致性，我们在写代码的过程中，不仅仅会处理文件本身，还会做一些其他的
    操作，比如进入终端，比如编辑查看目录。这样的操作，在IDE里面是独立的，你必须
    脱离编码过程。而文本编辑器，比如VIM或者emacs，所有操作都是一致的，因为它们遵
    循Linux哲学，一切都是文本，一切都按照文本操作模式来处理。终端是一个文本，目
    录文件也是一个文件，对它们的操作，和你写代码的操作是一样的。这意味着，VIM飞
    速的操作模式，可以同样使用去其他任意操作。这样的一致性，是IDE不可能实现的。
  - 使用IDE，可能失去的是对于UNIX哲学的把握。“IDE当然比vi要复杂的多，但是我不相
    信它在任何有用的地方能做的更强，但是vi是设计为UNIX系统的一部分并且能和其他系
    统相互协作”Jon Lasser反驳，“文本处理是 UNIX设计的一部分，而vi设计为这个系
    统的一部分”灵活性的唯一要点在于使工作变得快些。 Vi需要耐性去学习它古怪的操
    作方式，然后一旦你精通它们，你在任何UNIX系统上都获得了行动自由。
  - 更好的编程体验，自由的感觉。“观看一个vi高手对文件做复杂编辑时，当他手指在键
    盘上飞舞，文字像刷屏一般，你会认为他具有超人的力量。”“vi的关键在于组合特定
    的动作（删除、复制到缓冲区、变成大写等等）和移动（到第25行，到文档末、到下一
    处foo ，到这一行的第二个x，等等）。”
  - VIM适合所有人，不仅仅是跨平台。虽然内存，cpu在现代不是问题，但是还是有可能遇
    到硬件限制问题，比如远程终端，比如上网本。掌握VIM让你对硬件没有要求。
  - 所有的其他编辑器，所谓的VIM模式，都仅仅实现了VIM的1%，键盘反应速度完全达不到
    VIM的水平，支持的命令非常少。比如，j键，基本没有能够做到按j连续反应的，都是按
    一下，触发一个事件，而vim中是连续反应的。比如vim里面行号是有相对模式的。其他
    现代编辑器，是无法实现真正的vim模式。
  - vim可以实现书签。
  - vim的一致性体验问题，这是vim所谓的全键盘，比如搜索替换，使用v选择一个区块，
    在当前区块搜索，进入命令模式。如果在IDE里面，搜索是另外一个输入框了。
  - vim里面命令是粒度最小的，可以随意组合，快捷键是随意组合的结果，这和ide有着本
    质的区别，比如修改，字符跳转，复制，粘贴，vim中所有操作都可以用命令表示，如何
    操作，就像写一段话，进入视图模式，向下跳转5行，右移5个单词。比如文本对象，在
    vim中，一个文本对象"daw" 就是 "Delete A Word"
  - 我相信，就算vim真的开始封闭，不再开发新特性，依然会有很多人愿意使用的，就如
    tex一样，成为了一个经典之作。
    
	~	修改光标下字符的大小写，并移动到下一个字符。这不是一个操作符
		(除非设置了 'tildeop')，所以你不能连接一个动作命令。这个命令在
		可视模式下也有效，它会改变被选中的所有文本的大小写。

	I	移到当前行的第一个非空字符并启动插入模式。

	A	移动到行尾并启动插入模式。
	
	当你跳转到另一个文件后，有两个预定义的标记非常有用：
 
	`"

这个标记使你跳转到你上次离开这个文件时的位置。
另一个标记记住你最后一次修改文件的位置：
 
	`.

  //保存为文件名，但是不写入硬盘
	:file move.c
	//关闭其他窗口
	:only
	
	要扩大窗口：
	CTRL-W +

  要缩小窗口：
	CTRL-W -

	CTRL-W h	跳转到左边的窗口
	CTRL-W j	跳转到下面的窗口
	CTRL-W k	跳转到上面的窗口
	CTRL-W l	跳转到右边的窗口

	CTRL-W t	跳转到最顶上的窗口
	CTRL-W b	跳转到最底下的窗口
	
	vim对快捷键组合区分很好，<leader>t <leader>tn <leader>th <leader>tk可以同时存在
	
	CTRL-W H	把当前窗口移到最左边
	CTRL-W J	把当前窗口移到最下边
	CTRL-W L	把当前窗口移到最右边

要让 Vim 为每个文件打开一个窗口，可以使用 "-o" 参数：
	vim -o one.txt two.txt three.txt
	
	:edit main.c
	:vertical diffsplit main.c~ 
	:vertical diffpatch main.c diff
	
	:set scrollbind
	
	:dp
这将把文字从左边拷到右边，从而消除两边的差异。"dp" 代表 "diff put"。

	~       交换大小写     (a -> A 而 A -> a)
	U       转换成大写     (a -> A 而 A -> A)
	u       转换成小写     (a -> a 而 A -> a)
